[alias]

	# View abbreviated SHA, description, and history graph of the latest 20 commits
	l = log --pretty=oneline -n 20 --graph --abbrev-commit

	# View the current working tree status using the short format
	s = status -s

	# Pull in remote changes for the current repository and all its submodules
	p = !"git pull; git submodule foreach git pull origin master"

	# Checkout a pull request from origin (of a github repository)
	pr = !"pr() { git fetch origin pull/$1/head:pr-$1; git checkout pr-$1; }; pr"

	# Commit all changes
	ca = !git add -A && git commit -av

	# Color graph log view
	graph = log --graph --color --pretty=format:"%C(yellow)%H%C(green)%d%C(reset)%n%x20%cd%n%x20%cn%x20(%ce)%n%x20%s%n"

	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v

	# Amend the currently staged files to the latest commit
	amend = commit --amend --reuse-message=HEAD

	# Credit an author on the latest commit
	credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"

	# Interactive rebase with the given number of latest commits
	reb = "!r() { git rebase -i HEAD~$1; }; r"

	# Find branches containing commit
	fb = "!f() { git branch -a --contains $1; }; f"

	# Find tags containing commit
	ft = "!f() { git describe --always --contains $1; }; f"

	# Find commits by source code
	fc = "!f() { git log --pretty=format:'%C(yellow)%h	%Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f"

	# Find commits by commit message
	fm = "!f() { git log --pretty=format:'%C(yellow)%h	%Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"

	# Remove branches that have already been merged with master
	# a.k.a. ‘delete merged’
	dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d; git remote -v update -p"

	# List contributors with number of commits
	contributors = shortlog --summary --numbered

	lg = log --color --decorate --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an (%G?)>%Creset' --abbrev-commit

  # Undo last commit
	undo = !git reset HEAD~1 --mixed

	# Show commits in the current branch
	top = !git log --format=format:%an | sort | uniq -c | sort -r | head -n 20

	# Show all aliases
	alias=!git config -l | grep ^alias | cut -c 7- | sort

[apply]

	# Detect whitespace errors when applying a patch
	whitespace = fix

[core]

	# Use custom `.gitignore` and `.gitattributes`
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes

	# Treat spaces before tabs and all kinds of trailing whitespace as an error
	# [default] trailing-space: looks for spaces at the end of a line
	# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space

	# Make `git rebase` safer on OS X
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false
	editor = vim

[color "branch"]

	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]

	meta = yellow bold
	frag = magenta bold # line info
	old = red # deletions
	new = green # additions

[color "status"]

	added = yellow
	changed = green
	untracked = cyan

[diff]

	# Detect copies as well as renames
	renames = copies

[help]

	# Automatically correct and execute mistyped commands
	autocorrect = 1

[merge]

	# Include summaries of merged commits in newly created merge commit messages
	log = true

[push]

	# Use the given remote-tracking branch as the upstream branch
	autoSetupRemote = true/*

[pull]
	rebase = true
[commit]
	gpgsign = true
[gpg]
	format = ssh
[gpg "ssh"]
	program = /Applications/1Password.app/Contents/MacOS/op-ssh-sign
[user]
	email = 78575869+Olivier-OG@users.noreply.github.com
	name = Olivier-OG
	signingkey = ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDwNulCfykWZ6W5f8aIJGg+2e92fKEJxr1dEv2fmpr+EunZ1X/3r25qkkSwLczKBWX+6pIpaW5AE4j2nMNrn7ZwoKVLITC5X1KIGFc6sYOtBO866inPP6mkF6OmQuc+rKgdVYLQj+IMt+4KmzTvfZRq+ednaTaZCTTpzsnYs35dFp5ApaRcHUUkwC2c68saNzElbnuhgHoRm+0KZV+uA+z5bAfpA5NCcE72eb3s04m+SAUDmh1q7y+mtMBtdGVDAeB8iZv43k3L90nYgEroJBxtrUlyIslOuXDwvojtg3+Ih11v0jSV2qMJQoAX9/l0J1jobB+Ob0CHh4Szw0vmzeWJEp2v73XVpP9Lv1qPLfD2hiEUBTzJLFfdrj5+x1fv353ACNMPjKS3w+Da/iG2lrtbMAJOnpyQbR9ZqwGcwqBCC/s4PB7Jo2ZmuxbbUmSS9oXEa2SMHZNyuRmkzJ8q6QM7En7ci6ptJbuw9jgQX+vNLAkECpGJYHOy2Q4iHhnOCec=
	

